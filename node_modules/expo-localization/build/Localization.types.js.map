{"version":3,"file":"Localization.types.js","sourceRoot":"","sources":["../src/Localization.types.ts"],"names":[],"mappings":"","sourcesContent":["export type Localization = {\n  /**\n   * Native device language, returned in standard format.\n   *\n   * @example `en`, `en-US`, `es-US`\n   */\n  locale: string;\n  /**\n   * List of all the native languages provided by the user settings.\n   * These are returned in the order the user defines in their native settings.\n   */\n  locales: string[];\n  /**\n   * The current timezone in display format.\n   * On Web timezone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a better estimation you could use the moment-timezone package but it will add significant bloat to your website's bundle size.\n   *\n   * @example `America/Los_Angeles`\n   */\n  timezone: string;\n  /**\n   * A list of all the supported language ISO codes.\n   */\n  isoCurrencyCodes?: string[];\n  /**\n   * **Available on iOS and web**: Region code for your device which came from Region setting in Language & Region.\n   *\n   * @example `US`, `NZ`\n   */\n  region: string | null;\n  /**\n   * Returns if the system's language is written from Right-to-Left.\n   * This can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).\n   *\n   * Returns `false` in SSR environments.\n   */\n  isRTL: boolean;\n};\n"]}